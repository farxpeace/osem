<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Admin_users extends MY_Controller{    private $user;    function __construct()    {        parent::__construct();        // To load the CI benchmark and memory usage profiler - set 1==1.        if (1 == 2) {            $sections = array(                'benchmarks' => TRUE, 'memory_usage' => TRUE,                'config' => FALSE, 'controller_info' => FALSE, 'get' => FALSE, 'post' => FALSE, 'queries' => FALSE,                'uri_string' => FALSE, 'http_headers' => FALSE, 'session_data' => FALSE            );            $this->output->set_profiler_sections($sections);            $this->output->enable_profiler(TRUE);        }        // Load required CI libraries and helpers.        $this->load->database();        // IMPORTANT! This global must be defined BEFORE the flexi auth library is loaded!        // It is used as a global that is accessible via both models and both libraries, without it, flexi auth will not work.        $this->auth = new stdClass;        // Load 'standard' flexi auth library by default.        $this->load->library('flexi_auth');        if (!$this->flexi_auth->is_logged_in_via_password() || !$this->flexi_auth->is_admin()) {            // Set a custom error message.            $this->flexi_auth->set_error_message('You must login as an admin to access this area.', TRUE);            $this->session->set_flashdata('message', $this->flexi_auth->get_messages());            redirect('auth');        }        // Define a global variable to store data that is then used by the end view page.        $this->data = null;        $this->user = $this->flexi_auth->get_user_by_identity_row_array();        $this->user['user_profile'] = $this->far_users->get_profile('uacc_id', $this->user['uacc_id']);        $this->global_pass_to_view();    }    public function global_pass_to_view()    {        $this->data['logged_in'] = $this->user;        if ($this->flexi_auth->is_admin()) {            $this->data['logged_in']['is_admin'] = true;        }    }    function admin_list_all_supervisor(){        $this->far_auth->allowed_group('3,4,5', $this->user['ugrp_id']);        //echo "<pre>"; print_r($this->far_auth->pages); exit();        $this->load->view('admin_users/admin/admin_list_all_supervisor', $this->data);    }    function admin_list_all_staff(){        $this->far_auth->allowed_group('3,4,5', $this->user['ugrp_id']);        //echo "<pre>"; print_r($this->far_auth->pages); exit();        $this->load->view('admin_users/admin/admin_list_all_staff', $this->data);    }    function admin_list_all_fulfillment(){        $this->far_auth->allowed_group('3,4,5', $this->user['ugrp_id']);        //echo "<pre>"; print_r($this->far_auth->pages); exit();        $this->load->view('admin_users/admin/admin_list_all_fulfillment', $this->data);    }    function admin_list_all_marketing(){        $this->far_auth->allowed_group('3,4,5', $this->user['ugrp_id']);        //echo "<pre>"; print_r($this->far_auth->pages); exit();        $this->load->view('admin_users/admin/admin_list_all_marketing', $this->data);    }    function list_all_users(){        $this->far_auth->allowed_group('3,4,5', $this->user['ugrp_id']);        //echo "<pre>"; print_r($this->far_auth->pages); exit();        $this->load->view('admin_users/admin/dashlite_list_all_users', $this->data);    }    function admin_view_user_detail(){        $this->far_auth->allowed_group('3,4,5', $this->user['ugrp_id']);        $uacc_id = $this->input->get('uacc_id');        $page = $this->input->get('page');        $this->data['page'] = $page;        //user detail        $user_detail = $this->far_users->get_user('uacc_id', $uacc_id);        $this->data['user_detail'] = $user_detail;        $user_profile = $this->far_users->get_profile('uacc_id', $user_detail['uacc_id']);        $this->data['user_profile'] = $user_profile;        $user_view_detail = $this->far_users->get_user_simple($uacc_id);        $this->data['user_view_detail'] = $user_view_detail;        //$this->far_ruko->sync_user($uacc_id);        if($page == "user_information"){            $this->load->view('admin_users/admin_view_user_detail/user_information', $this->data);        }elseif($page == 'list_attendance'){            $this->load->view('admin_users/admin_view_user_detail/list_attendance', $this->data);        }elseif($page == 'staff_information'){            //sync with ruko            $this->load->view('admin_users/admin_view_user_detail/staff_information', $this->data);        }elseif($page == 'list_all_downline'){            $list_all_downline = $this->be_hierarchy->list_all_downline_and_group_by_level($userId);            $this->data['list_all_downline'] = $list_all_downline;            $this->load->view('admin_users/admin_view_user_detail/list_all_downline', $this->data);        }elseif($page == 'list_all_wallet_myloan'){            $this->load->view('admin_users/admin_view_user_detail/list_all_wallet_myloan', $this->data);        }elseif($page == 'dealer_coupon_detail'){            $this->load->view('admin_users/admin_view_user_detail/dealer_coupon_detail', $this->data);        }elseif($page == 'list_all_wallet_telco'){            $this->load->view('admin_users/admin_view_user_detail/list_all_wallet_telco', $this->data);        }elseif($page == 'list_all_wallet_mgm'){            $this->load->view('admin_users/admin_view_user_detail/list_all_wallet_mgm', $this->data);        }elseif($page == 'list_all_mgm_cto'){            $selected_cto_first_choose_month = date("m");            $this->data['selected_cto_first_choose_month'] = $selected_cto_first_choose_month;            $selected_cto_first_choose_year = date("Y");            $this->data['selected_cto_first_choose_year'] = $selected_cto_first_choose_year;            $this->load->view('admin_users/admin_view_user_detail/list_all_mgm_cto', $this->data);        }else{            $this->load->view('users/admin_view_user_detail/dashboard', $this->data);        }    }    function ajax_datatable_admin_list_all_users(){        $this->far_auth->allowed_group('3,4', $this->user['ugrp_id']);        $this->load->library('datatables');        $uacc_group_fk = $this->user['uacc_group_fk'];        $this->datatables->select('u.uacc_id');        $this->datatables->select('u.uacc_username');        $this->datatables->select('u.fullname');        $this->datatables->select('u.fullname_as_per_mykad');        $this->datatables->select('u.email');        $this->datatables->select('u.user_department_id');        $this->datatables->select('u.user_designation_id');        $this->datatables->select('u.user_designation_name');        $this->datatables->select('u.user_department_name');        $this->datatables->select('u.user_role_name');        $this->datatables->select('u.user_role_code');        $this->datatables->select('u.uacc_date_added');        $this->datatables->select('u.mobile_number');        $this->datatables->select('u.profile_picture');        $this->datatables->select('u.user_status');        $this->datatables->select('u.nric_number');        $this->datatables->select('u.wallet_myloan_total');        $this->datatables->select('u.mykad_front_verification_status');        $this->datatables->select('u.mykad_back_verification_status');        $this->datatables->select('u.signature_verification_status');        $this->datatables->from('view_user_list u');        $this->datatables->where('u.uacc_group_fk', '6');        $output = $this->datatables->generate();        echo $output;    }    function ajax_datatable_admin_list_all_supervisor(){        $this->far_auth->allowed_group('3,4', $this->user['ugrp_id']);        $this->load->library('datatables');        $uacc_group_fk = $this->user['uacc_group_fk'];        $this->datatables->select('u.uacc_id');        $this->datatables->select('u.uacc_username');        $this->datatables->select('u.fullname');        $this->datatables->select('u.fullname_as_per_mykad');        $this->datatables->select('u.email');        $this->datatables->select('u.user_department_id');        $this->datatables->select('u.user_designation_id');        $this->datatables->select('u.user_designation_name');        $this->datatables->select('u.user_department_name');        $this->datatables->select('u.user_role_name');        $this->datatables->select('u.user_role_code');        $this->datatables->select('u.uacc_date_added');        $this->datatables->select('u.mobile_number');        $this->datatables->select('u.profile_picture');        $this->datatables->select('u.user_status');        $this->datatables->select('u.nric_number');        $this->datatables->select('u.wallet_myloan_total');        $this->datatables->select('u.mykad_front_verification_status');        $this->datatables->select('u.mykad_back_verification_status');        $this->datatables->select('u.signature_verification_status');        $this->datatables->from('view_user_list u');        $this->datatables->where('u.uacc_group_fk', '5');        $output = $this->datatables->generate();        echo $output;    }    function ajax_datatable_admin_list_all_staff(){        $this->far_auth->allowed_group('3,4', $this->user['ugrp_id']);        $this->load->library('datatables');        $uacc_group_fk = $this->user['uacc_group_fk'];        $this->datatables->select('u.uacc_id');        $this->datatables->select('u.uacc_username');        $this->datatables->select('u.fullname');        $this->datatables->select('u.uacc_email');        $this->datatables->select('u.uacc_date_added');        $this->datatables->select('u.mobile_number');        $this->datatables->from('view_user_list u');        if($this->input->get('show') == 'marketing'){            $this->datatables->where('u.uacc_group_fk', '8');        }else{            $this->datatables->where('u.uacc_group_fk', '6');        }        $output = $this->datatables->generate();        $output_json = json_decode($output, true);        foreach($output_json['data'] as $a => $b){            $user_detail = $this->far_users->get_user('uacc_id', $b['uacc_id']);            $output_json['data'][$a]['user_detail'] = $user_detail;        }        echo json_encode($output_json);    }    function ajax_datatable_admin_list_all_fulfillment(){        $this->far_auth->allowed_group('3,4', $this->user['ugrp_id']);        $this->load->library('datatables');        $uacc_group_fk = $this->user['uacc_group_fk'];        $this->datatables->select('u.uacc_id');        $this->datatables->select('u.uacc_username');        $this->datatables->select('u.fullname');        $this->datatables->select('u.fullname_as_per_mykad');        $this->datatables->select('u.email');        $this->datatables->select('u.user_department_id');        $this->datatables->select('u.user_designation_id');        $this->datatables->select('u.user_designation_name');        $this->datatables->select('u.user_department_name');        $this->datatables->select('u.user_role_name');        $this->datatables->select('u.user_role_code');        $this->datatables->select('u.uacc_date_added');        $this->datatables->select('u.mobile_number');        $this->datatables->select('u.profile_picture');        $this->datatables->select('u.user_status');        $this->datatables->select('u.nric_number');        $this->datatables->select('u.wallet_myloan_total');        $this->datatables->select('u.mykad_front_verification_status');        $this->datatables->select('u.mykad_back_verification_status');        $this->datatables->select('u.signature_verification_status');        $this->datatables->from('view_user_list u');        if($this->input->get('show') == 'marketing'){            $this->datatables->where('u.uacc_group_fk', '8');        }else{            $this->datatables->where('u.uacc_group_fk', '9');        }        $output = $this->datatables->generate();        $output_json = json_decode($output, true);        foreach($output_json['data'] as $a => $b){            $user_detail = $this->far_users->get_user('uacc_id', $b['uacc_id']);            $output_json['data'][$a]['user_detail'] = $user_detail;        }        echo json_encode($output_json);    }    function ajax_admin_delete_user(){        $this->far_auth->allowed_group('3,4,5', $this->user['ugrp_id']);        $postdata = $this->input->post('postdata');        $error = array();        $output = array();        $user_detail = $this->far_users->get_user('uacc_id',$postdata['uacc_id']);        if(count($error) == 0){            if($user_detail['uacc_group_fk'] == '4'){                $new_uacc_group_fk = '100';            }elseif($user_detail['uacc_group_fk'] == '6'){                $new_uacc_group_fk = '99';            }            $deleted_username = $user_detail['uacc_username'].'_deleted_'.time();            $this->far_users->update_user('uacc_id', $postdata['uacc_id'], 'uacc_username', $deleted_username);            $this->far_users->update_user('uacc_id', $postdata['uacc_id'], 'uacc_group_fk', $new_uacc_group_fk);            $this->far_users->update_user('uacc_id', $postdata['uacc_id'], 'user_status', 'deleted');            $output['status'] = 'success';        }else{            $output['message_single'] = current($error);            $output['errors'] = $error;            $output['status'] = 'error';        }        echo json_encode($output);    }    function ajax_admin_create_new_staff(){        $this->far_auth->allowed_group('3', $this->user['ugrp_id']);        $postdata = $this->input->post('postdata');        $error = array();        $output = array();        //check username        if(!preg_match('/^[a-z0-9_]+$/', strtolower($postdata['uacc_username']))){            $error['uacc_username'] = "Username contain invalid character. Only a~z and 0~9 are allowed";        }        //uacc_username        if(strlen($postdata['uacc_username']) < 3){            $error['uacc_username'] = "Username must be more than 3 character";        }        //check if username already exists        if($this->far_users->is_username_exists($postdata['uacc_username'])){            $error['uacc_username'] = "Username already exists. Please try using different username";        }        if(strlen($postdata['fullname']) <= 3){            $error['fullname'] = "Fullname must be more than 3 character";        }        //check if email exists        $email_address = strtolower($postdata['email'] ?? "");        if(strlen($email_address) < 3){            $error['email'] = "Please check email must be more than 3 characters";        }else{            if (!filter_var($email_address, FILTER_VALIDATE_EMAIL)) {                $error['email'] = "Invalid email format";            }else{                if($this->far_users->is_email_exists($email_address)){                    $error['email'] = "Email already exists. Please try use another email";                }            }        }        $mobile_number = $postdata['mobile_number'] ?? "";        if(strlen($mobile_number) < 5){            $error['mobile_number'] = "Please check mobile number";        }        $minLengthPassword = $this->flexi_auth->min_password_length();        if(strlen($postdata['uacc_raw_password']) < $minLengthPassword){            $error['uacc_raw_password'] = "Your password must be at least ".$minLengthPassword." characters";        }        //chack valid or not        if(!$this->flexi_auth->valid_password_chars($postdata['uacc_raw_password'])){            $error['uacc_raw_password'] = "Password not valid. Please try again";        }        if(count($error) == 0){            //create user            $email = $email_address;            $username = $postdata['uacc_username'];            $password = $postdata['uacc_raw_password'];            //$password = '12345678';            $user_data = array();            $group_id = 6;            $activate = TRUE;            $uacc_id = $this->flexi_auth->insert_user(strtolower($email), strtolower($username), $password, $user_data, $group_id, $activate);            if($uacc_id){                $this->far_users->update_user('uacc_id', $uacc_id, 'uacc_raw_password', $password);                //force_change_password                $this->far_users->update_user('uacc_id', $uacc_id, 'force_change_password', 'yes');                //update profile                $this->far_users->update_profile('uacc_id', $uacc_id, 'fullname', strtoupper($postdata['fullname']));                $this->far_users->update_profile('uacc_id', $uacc_id, 'mobile_number', $postdata['mobile_number']);                //default profile pic                $profile_pic_url = $this->far_meta->get_value('default_profile_picture') ?? NULL;                $this->far_users->update_profile('uacc_id', $uacc_id, 'profile_picture_url', $profile_pic_url);                $log_data = array();                $log_data['new_user_uacc_id'] = $uacc_id;                $log_data['user_detail'] = array(                    'fullname' => $postdata['fullname']                );                $this->far_log->insert($this->user['uacc_id'], 'cms_admin_create_new_user', $log_data);                $output['uacc_id'] = $uacc_id;                $output['status'] = 'success';            }else{                $error['message_single'] = "New user creation failed. Please contact administrator";                $output['status'] = 'error';            }        }else{            $output['message_single'] = current($error);            $output['errors'] = $error;            $output['status'] = 'error';        }        echo json_encode($output);    }    function ajax_admin_update_linked_account(){        $this->far_auth->allowed_group('3', $this->user['ugrp_id']);        $postdata = $this->input->post('postdata');        $error = array();        $output = array();        if($postdata['linked_uacc_id'] == 0){        }else{            $user_detail = $this->far_users->get_user('uacc_id', $postdata['linked_uacc_id']);            if($user_detail['uacc_group_fk'] != '6'){                $error['uacc_group_fk'] = "Please choose User";            }            //check if already linked            $query = $this->db->query("SELECT * FROM user_accounts WHERE uacc_id!='".$postdata['uacc_id']."' AND linked_uacc_id='".$postdata['linked_uacc_id']."'");            if($query->num_rows() > 0){                $error['linked_uacc_id'] = "This user already link with other accounts";            }        }        if(count($error) == 0){            $this->far_users->update_user('uacc_id', $postdata['uacc_id'], 'linked_uacc_id', $postdata['linked_uacc_id']);            $output['status'] = 'success';        }else{            $output['message_single'] = current($error);            $output['errors'] = $error;            $output['status'] = 'error';        }        echo json_encode($output);    }    function ajax_admin_update_user_details(){        $this->far_auth->allowed_group('3', $this->user['ugrp_id']);        $postdata = $this->input->post('postdata');        $error = array();        $output = array();        if(strlen($postdata['fullname'] ?? "") < 3){            $error['fullname'] = "Fullname must be greater than 3 characters";        }        if(array_key_exists('uacc_email', $postdata) && strlen($postdata['uacc_email'] ?? "") < 3){            $error['email'] = "Email must be greater than 3 characters";        }else{            $uacc_email = strtolower($postdata['uacc_email']);            //check if email exists            $query2 = $this->db->query("SELECT * FROM user_accounts WHERE uacc_email='".$uacc_email."' AND uacc_id!='".$postdata['uacc_id']."'");            if($query2->num_rows() > 0){                $error['uacc_email'] = "Email already exists. Please try using different email";            }        }        $mobile_number = $this->far_helper->fix_msisdn($postdata['mobile_number'] ?? "");        if(strlen($mobile_number) < 10){            $error['mobile_number'] = "Mobile Number must be greater than 10 digits";        }        if(count($error) == 0){            if(strlen($postdata['fullname'] ?? "") > 3){                $this->far_users->update_profile('uacc_id', $postdata['uacc_id'], 'fullname', $postdata['fullname']);            }            if(strlen($postdata['uacc_email'] ?? "") >= 3){                $this->far_users->update_user('uacc_id', $postdata['uacc_id'], 'uacc_email', $postdata['uacc_email']);            }            if(strlen($mobile_number) > 8){                $this->far_users->update_profile('uacc_id', $postdata['uacc_id'], 'mobile_number', "+".$mobile_number);            }            $output['status'] = 'success';        }else{            $output['message_single'] = current($error);            $output['errors'] = $error;            $output['status'] = 'error';        }        echo json_encode($output);    }    function admin_update_password(){        $this->far_auth->allowed_group('3', $this->user['ugrp_id']);        $postdata = $this->input->post('postdata');        $error = array();        $output = array();        $minLengthPassword = $this->flexi_auth->min_password_length();        if(strlen($postdata['password'] ?? "") < $minLengthPassword){            $error['password'] = "Your password must be at least ".$minLengthPassword." characters";        }        //chack valid or not        if(!$this->flexi_auth->valid_password_chars($postdata['password'])){            $error['password'] = "Password not valid. Please try again";        }        $user_detail = $this->far_users->get_user_detail_from_view($postdata['uacc_id']);        if(count($user_detail) == 0){            $error['uacc_id'] = "User not exists";        }        if(count($error) == 0){            $change_password = $this->flexi_auth_model->change_password_new($user_detail['uacc_id'], $postdata['password']);            if($change_password){                $this->far_users->update_user('uacc_id', $user_detail['uacc_id'], 'uacc_raw_password', $postdata['password']);                $this->far_users->update_user('uacc_id', $user_detail['uacc_id'], 'force_change_password', 'yes');                $output['message'] = "Password for ".$user_detail['uacc_username']." has been reset to ".$postdata['password'];                $output['status'] = "success";            }else{                $output['errors'] = $error;                $output['error_message_single'] = current($error);                $output['status'] = 'error';            }        }else{            $output['message_single'] = current($error);            $output['errors'] = $error;            $output['status'] = 'error';        }        echo json_encode($output);    }}