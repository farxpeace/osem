/*	Plugin Name: Name of the plugin.	Description: Brief description about plugin.*/; (function ($, window, document, undefined) {    "use strict";    let plugin;    const PLUGIN_NAME = 'widget_mykad';    function Plugin(element, options) {        this._element    = element;        this._pluginName = PLUGIN_NAME;        this._defaults   = $.fn[PLUGIN_NAME].defaults;        this._settings 	 = $.extend({}, this._defaults, options);        this._init();    }    // Avoid Plugin.prototype conflicts    $.extend(Plugin.prototype, {        // Initialization logic        _init: function () {            plugin = this;            this._build();            this._bindEvents();        },        initialize: function(){            this.load_widget_mykad_frame();            if(this._settings.user_address_id){                console.log('default')            }            $("body").append('<div id="widget_mykad_temporary"></div>')            console.log(this._settings)        },        // Cache DOM nodes for performance        _build: function () {            this.$_element = $(this._element);            this.initialize();        },        // Bind events that trigger methods        _bindEvents: function () {            plugin.$_element.on('click' + '.' + plugin._pluginName, function () {                plugin._someOtherFunction.call(plugin);            });        },        // Unbind events that trigger methods        _unbindEvents: function () {            this.$_element.off('.' + this._pluginName);        },        // Remove plugin instance completely        _destroy: function () {            this._unbindEvents();            this.$_element.removeData();        },        // Create custom methods        _someOtherFunction: function () {            console.log('Function is called.');            this._callback();        },        // Callback methods        _callback: function () {            // Cache onComplete option            let onComplete = this._settings.onComplete;            if (typeof onComplete === "function") {                onComplete(this._element);            }        },        load_widget_mykad_frame: function(){            var ajaxPostdata = {}            if(this._settings.uacc_id){                ajaxPostdata.uacc_id = this._settings.uacc_id;            }            $(this._element).load(this._settings.base_url+'widget_mykad/load_widget_mykad_frame', { postdata: ajaxPostdata }, function(){                plugin.initialize_mykad('front');                plugin.initialize_mykad('back');            })        },        initialize_mykad: function(front_or_back){            if($(this._element).find('.camera_status_'+front_or_back).hasClass("pending_upload")){                $(this._element).find('.camera_status_'+front_or_back).find('.icon_upload_status').addClass("d-none");                $(this._element).find('.camera_status_'+front_or_back).find('.icon_upload_status.icon_exclamation').removeClass("d-none");                $(this._element).find('.upload_mykad_'+front_or_back+'_status_text').text("Pending image upload");            }else if($(this._element).find('.camera_status_'+front_or_back).hasClass("pending_admin_verification")){                $(this._element).find('.camera_status_'+front_or_back).find('.icon_upload_status').addClass("d-none");                $(this._element).find('.camera_status_'+front_or_back).find('.icon_upload_status.icon_waiting_verification').removeClass("d-none");                $(this._element).find('.upload_mykad_'+front_or_back+'_status_text').text("Pending admin verification");            }else if($(this._element).find('.camera_status_'+front_or_back).hasClass("verified")){                $(this._element).find('.camera_status_'+front_or_back).find('.icon_upload_status').addClass("d-none");                $(this._element).find('.camera_status_'+front_or_back).find('.icon_upload_status.icon_success').removeClass("d-none");                $(this._element).find('.upload_mykad_'+front_or_back+'_status_text').text("Verified");            }        },    });    //Plugin wrapper    /*    $.fn[PLUGIN_NAME] = function (options) {        this.each(function () {            if (!$.data(this, "plugin_" + PLUGIN_NAME)) {                $.data(this, "plugin_" + PLUGIN_NAME, new Plugin(this, options));            }        });        return this;    };     */    $.fn[PLUGIN_NAME] = function (options) {        this.refresh_widget = function(){            plugin.load_widget_mykad_frame();        }        this.open_camera_mykad = function(front_or_back){            $(".has_error").removeClass("has_error");            $(".error_message").hide();            //check fullname            if($("#fullname_as_per_mykad").val().length < 4){                $("#fullname_as_per_mykad").closest('.group-input').addClass("has_error").find(".error_message").show();                return false;            }            if($("#nric_number").val().length < 4){                $("#nric_number").closest('.group-input').addClass("has_error").find(".error_message").show();                return false;            }            if(front_or_back == 'front'){                $("#fileinput_mykad_front").click();            }else if(front_or_back == 'back'){                $("#fileinput_mykad_back").click();            }        }        this.open_camera_mykad_front = function() {        }        this.getData = function(){            var data = $(plugin._element).data();            return data;        }        this.setData = function(dataName, dataValue){            var data = $(plugin._element).data(dataName, dataValue);            return data;        }        this.each(function () {            if (!$.data(this, "plugin_" + PLUGIN_NAME)) {                $.data(this, "plugin_" + PLUGIN_NAME, new Plugin(this, options));            }        });        return this;    };    $.fn[PLUGIN_NAME].defaults = {        property  : 'value',        onComplete: null    };})(jQuery, window, document);